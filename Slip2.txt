Write a Java Program to implement Singleton pattern for multithreading
ANS:
package Singleton;

public class Singleton {
private static Singleton obj=new Singleton();
private Singleton() {}
public static Singleton getSingleton() {
	return obj;

}
public static void main(String[] args)
{
	System.out.println("Object Created");
}
}




Write a program to measure the distance using ultrasonic sensor and make LED blink
using Arduino

ANS: 
// constants
const int TRIG_PIN = 6; // Arduino pin connected to Ultrasonic Sensor's TRIG pin
const int ECHO_PIN = 7; // Arduino pin connected to Ultrasonic Sensor's ECHO pin
const int LED_PIN = 3; // Arduino pin connected to LED's pin const int
DISTANCE_THRESHOLD = 50; // centimeters
// variables
float duration_us, distance_cm;
void setup() {
Serial.begin(9600); // initialize serial port
pinMode(TRIG_PIN, OUTPUT); // set arduino pin to output mode
pinMode(ECHO_PIN, INPUT); // set arduino pin to input mode
pinMode(LED_PIN, OUTPUT); // set arduino pin to output mode
}
void loop() {
// generate 10-microsecond pulse to TRIG pin
digitalWrite(TRIG_PIN, HIGH);
delayMicroseconds(10);
digitalWrite(TRIG_PIN, LOW);
// measure duration of pulse from ECHO pin duration_us =
pulseIn(ECHO_PIN, HIGH);
// calculate the distance
distance_cm = 0.017 * duration_us;
if (distance_cm < DISTANCE_THRESHOLD) digitalWrite(LED_PIN,
HIGH); // turn on LED
else
digitalWrite(LED_PIN, LOW); // turn off LED
Serial.print("distance: ");
// print the value to Serial Monitor Serial Monitor
Serial.print(distance_cm); Serial.println(" cm");
delay(500); 