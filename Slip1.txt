Write a Java Program to implement I/O Decorator for converting uppercase letters to
lower case letters

ANS: 
package Uppercase;

import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.OutputStream;

public class LowercaseOutputStream extends FilterOutputStream {

    public LowercaseOutputStream(OutputStream out) {
        super(out);
    }

    @Override
    public void write(int b) throws IOException {
      
        if (Character.isUpperCase(b)) {
            b = Character.toLowerCase(b);
        }
        super.write(b);
    }

    @Override
    public void write(byte[] b, int off, int len) throws IOException {
        for (int i = off; i < off + len; i++) {
         
            if (Character.isUpperCase(b[i])) {
                b[i] = (byte) Character.toLowerCase(b[i]);
            }
        }
        super.write(b, off, len);
    }

    public static void main(String[] args) throws IOException {
   
        LowercaseOutputStream lowercaseStream = new LowercaseOutputStream(System.out);

        String text = "HELLO I AM ";
        byte[] bytes = text.getBytes();
        lowercaseStream.write(bytes);

        
        lowercaseStream.close();
    }
}


Write a program to sense the available networks using Arduino
ANS: #include <SPI.h>
#include <WiFi.h>
void setup() {
// initialize serial and wait for the port to open: Serial.begin(9600);
while (!Serial); // attempt to connect using WEP encryption: Serial.println("Initializing
Wifi...");
printMacAddress(); // scan for existing networks: Serial.println("Scanning available
networks...");
listNetworks();
}
void loop()
{ delay (10000);
// scan for existing networks:
Serial.println ("Scanning available networks...");
 listNetworks();
}
void printMacAddress()
 {
// the MAC address of your Wifi shield byte mac[6];
// print your MAC address:
WiFi.macAddress(mac);
Serial.print("MAC: ");
Serial.print(mac[5], HEX); Serial.print(":");
Serial.print(mac[4], HEX);
Serial.print(":");
Serial.print(mac[3], HEX);
Serial.print(":");
Serial.print(mac[2], HEX);
Serial.print(":");
Serial.print(mac[1], HEX);
Serial.print(":");
Serial.println(mac[0], HEX);
}

void listNetworks() {
// scan for nearby networks:
Serial.println("** Scan Networks **");
byte numSsid = WiFi.scanNetworks();
// print the list of networks seen:
Serial.print("number of available networks:");
Serial.println(numSsid);
// print the network number and name for each network found:
 for (int thisNet = 0; thisNet < numSsid; thisNet++)
 {
Serial.print(thisNet); Serial.print(") ";
Serial.print(WiFi.SSID(thisNet));
Serial.print("\tSignal: ");
Serial.print(WiFi.RSSI(thisNet));
Serial.print(" dBm");
Serial.print("\tEncryption:");
Serial.println(WiFi.encryptionType(thisNet));
}
} 